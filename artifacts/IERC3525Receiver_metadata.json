{
	"compiler": {
		"version": "0.8.20+commit.a1b79de6"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_operator",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "_fromTokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_toTokenId",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "_value",
						"type": "uint256"
					},
					{
						"internalType": "bytes",
						"name": "_data",
						"type": "bytes"
					}
				],
				"name": "onERC3525Received",
				"outputs": [
					{
						"internalType": "bytes4",
						"name": "",
						"type": "bytes4"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Interface for a smart contract that wants to be informed by ERC-3525 contracts when receiving values from ANY addresses or ERC-3525 tokens. Note: the ERC-165 identifier for this interface is 0x009ce20b.",
			"kind": "dev",
			"methods": {
				"onERC3525Received(address,uint256,uint256,uint256,bytes)": {
					"details": "An ERC-3525 smart contract MUST check whether this function is implemented by the recipient contract, if the  recipient contract implements this function, the ERC-3525 contract MUST call this function after a   value transfer (i.e. `transferFrom(uint256,uint256,uint256,bytes)`).  MUST return 0x009ce20b (i.e. `bytes4(keccak256('onERC3525Received(address,uint256,uint256,  uint256,bytes)'))`) if the transfer is accepted.  MUST revert or return any value other than 0x009ce20b if the transfer is rejected.",
					"params": {
						"_data": "Additional data with no specified format",
						"_fromTokenId": "The token id to transfer value from",
						"_operator": "The address which triggered the transfer",
						"_toTokenId": "The token id to transfer value to",
						"_value": "The transferred value"
					},
					"returns": {
						"_0": "`bytes4(keccak256('onERC3525Received(address,uint256,uint256,uint256,bytes)'))`   unless the transfer is rejected."
					}
				}
			},
			"title": "ERC-3525 token receiver interface",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"onERC3525Received(address,uint256,uint256,uint256,bytes)": {
					"notice": "Handle the receipt of an ERC-3525 token value."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"IERC3525Receiver .sol": "IERC3525Receiver"
		},
		"evmVersion": "shanghai",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"IERC3525Receiver .sol": {
			"keccak256": "0x98ac8181ce36c11a7a4e99aafc922261a76072f6dcb0d5cc6d2bf4c3a5eb2e3a",
			"license": "MIT",
			"urls": [
				"bzz-raw://6a72197218c8624c2a1bca2ceb4df3b0a7d8d5f5472b6c00f7a8bfbfef4890d7",
				"dweb:/ipfs/QmTPupSq9xkVALmrHBP72rMTaziQnMreft6baQXiuY3RuQ"
			]
		}
	},
	"version": 1
}